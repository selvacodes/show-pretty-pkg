// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Fs                      = require("fs");
var Json                    = require("rex-json/./src/Json.js");
var List                    = require("bs-platform/lib/js/list.js");
var Chalk                   = require("chalk");
var Constants$ShowPrettyPkg = require("./Constants.js");

var scriptsJson = Json.get("scripts", Json.parse(Fs.readFileSync(Constants$ShowPrettyPkg.rootExecPath + "/package.json", "utf8")));

var scripts;

if (scriptsJson) {
  var match = scriptsJson[0];
  scripts = typeof match === "number" ? /* :: */[
      /* Script */[
        "none",
        "none"
      ],
      /* [] */0
    ] : (
      match.tag === 3 ? List.map((function (item) {
                var match = item[1];
                if (typeof match === "number") {
                  return /* Script */[
                          "none",
                          "none"
                        ];
                } else if (match.tag) {
                  return /* Script */[
                          "none",
                          "none"
                        ];
                } else {
                  return /* Script */[
                          item[0],
                          match[0]
                        ];
                }
              }), match[0]) : /* :: */[
          /* Script */[
            "none",
            "none"
          ],
          /* [] */0
        ]
    );
} else {
  scripts = /* :: */[
    /* Script */[
      "none",
      "none"
    ],
    /* [] */0
  ];
}

console.log(Chalk.bold("Project Commands"));

List.iter((function (item) {
        var name = item[0];
        var exit = 0;
        if (name === "none") {
          if (item[1] === "none") {
            return /* () */0;
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
        if (exit === 1) {
          console.log("\t- " + Chalk.white(name));
          console.log("\t\t" + Chalk.yellow(item[1]));
          return /* () */0;
        }
        
      }), scripts);

exports.scriptsJson = scriptsJson;
exports.scripts     = scripts;
/* scriptsJson Not a pure module */
